Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2021.2 (win64) Build 3367213 Tue Oct 19 02:48:09 MDT 2021
| Date         : Tue Jul 26 18:14:16 2022
| Host         : Karim-PC running 64-bit major release  (build 9200)
| Command      : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
| Design       : design_1_wrapper
| Device       : xc7z020clg484-1
| Speed File   : -1
| Design State : Fully Routed
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Report Methodology

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
             Max violations: <unlimited>
             Violations found: 187
+-----------+------------------+------------------------------------------------------------------+------------+
| Rule      | Severity         | Description                                                      | Violations |
+-----------+------------------+------------------------------------------------------------------+------------+
| TIMING-4  | Critical Warning | Invalid primary clock redefinition on a clock tree               | 4          |
| TIMING-6  | Critical Warning | No common primary clock between related clocks                   | 9          |
| TIMING-7  | Critical Warning | No common node between related clocks                            | 5          |
| TIMING-27 | Critical Warning | Invalid primary clock on hierarchical pin                        | 2          |
| DPIR-1    | Warning          | Asynchronous driver check                                        | 104        |
| TIMING-9  | Warning          | Unknown CDC Logic                                                | 1          |
| TIMING-15 | Warning          | Large hold violation on inter-clock path                         | 14         |
| TIMING-18 | Warning          | Missing input or output delay                                    | 15         |
| TIMING-56 | Warning          | Missing logically or physically excluded clock groups constraint | 3          |
| XDCB-5    | Warning          | Runtime inefficient way to find pin objects                      | 26         |
| XDCC-1    | Warning          | Scoped Clock constraint overwritten with the same name           | 4          |
+-----------+------------------+------------------------------------------------------------------+------------+

2. REPORT DETAILS
-----------------
TIMING-4#1 Critical Warning
Invalid primary clock redefinition on a clock tree  
Invalid clock redefinition on a clock tree. The primary clock DAC_Clk is defined downstream of clock clk_100n_design_1_clk_wiz_0_0 and overrides its insertion delay and/or waveform definition
Related violations: <none>

TIMING-4#2 Critical Warning
Invalid primary clock redefinition on a clock tree  
Invalid clock redefinition on a clock tree. The primary clock DAC_Clk is defined downstream of clock clk_100n_design_1_clk_wiz_0_0_1 and overrides its insertion delay and/or waveform definition
Related violations: <none>

TIMING-4#3 Critical Warning
Invalid primary clock redefinition on a clock tree  
Invalid clock redefinition on a clock tree. The primary clock DAC_InIO_Clk is defined downstream of clock clk_100_design_1_clk_wiz_0_0 and overrides its insertion delay and/or waveform definition
Related violations: <none>

TIMING-4#4 Critical Warning
Invalid primary clock redefinition on a clock tree  
Invalid clock redefinition on a clock tree. The primary clock DAC_InIO_Clk is defined downstream of clock clk_100_design_1_clk_wiz_0_0_1 and overrides its insertion delay and/or waveform definition
Related violations: <none>

TIMING-6#1 Critical Warning
No common primary clock between related clocks  
The clocks DAC_InIO_Clk and ZmodDAC_ClkIO are related (timed together) but they have no common primary clock. The design could fail in hardware. To find a timing path between these clocks, run the following command: report_timing -from [get_clocks DAC_InIO_Clk] -to [get_clocks ZmodDAC_ClkIO]
Related violations: <none>

TIMING-6#2 Critical Warning
No common primary clock between related clocks  
The clocks clk_100_design_1_clk_wiz_0_0 and DAC_InIO_Clk are related (timed together) but they have no common primary clock. The design could fail in hardware. To find a timing path between these clocks, run the following command: report_timing -from [get_clocks clk_100_design_1_clk_wiz_0_0] -to [get_clocks DAC_InIO_Clk]
Related violations: <none>

TIMING-6#3 Critical Warning
No common primary clock between related clocks  
The clocks clk_100_design_1_clk_wiz_0_0 and ZmodDAC_ClkIO are related (timed together) but they have no common primary clock. The design could fail in hardware. To find a timing path between these clocks, run the following command: report_timing -from [get_clocks clk_100_design_1_clk_wiz_0_0] -to [get_clocks ZmodDAC_ClkIO]
Related violations: <none>

TIMING-6#4 Critical Warning
No common primary clock between related clocks  
The clocks clk_100_design_1_clk_wiz_0_0 and clk_100_design_1_clk_wiz_0_0_1 are related (timed together) but they have no common primary clock. The design could fail in hardware. To find a timing path between these clocks, run the following command: report_timing -from [get_clocks clk_100_design_1_clk_wiz_0_0] -to [get_clocks clk_100_design_1_clk_wiz_0_0_1]
Related violations: <none>

TIMING-6#5 Critical Warning
No common primary clock between related clocks  
The clocks clk_100_design_1_clk_wiz_0_0_1 and DAC_InIO_Clk are related (timed together) but they have no common primary clock. The design could fail in hardware. To find a timing path between these clocks, run the following command: report_timing -from [get_clocks clk_100_design_1_clk_wiz_0_0_1] -to [get_clocks DAC_InIO_Clk]
Related violations: <none>

TIMING-6#6 Critical Warning
No common primary clock between related clocks  
The clocks clk_100_design_1_clk_wiz_0_0_1 and ZmodDAC_ClkIO are related (timed together) but they have no common primary clock. The design could fail in hardware. To find a timing path between these clocks, run the following command: report_timing -from [get_clocks clk_100_design_1_clk_wiz_0_0_1] -to [get_clocks ZmodDAC_ClkIO]
Related violations: <none>

TIMING-6#7 Critical Warning
No common primary clock between related clocks  
The clocks clk_100_design_1_clk_wiz_0_0_1 and clk_100_design_1_clk_wiz_0_0 are related (timed together) but they have no common primary clock. The design could fail in hardware. To find a timing path between these clocks, run the following command: report_timing -from [get_clocks clk_100_design_1_clk_wiz_0_0_1] -to [get_clocks clk_100_design_1_clk_wiz_0_0]
Related violations: <none>

TIMING-6#8 Critical Warning
No common primary clock between related clocks  
The clocks clk_100n_design_1_clk_wiz_0_0 and clk_100n_design_1_clk_wiz_0_0_1 are related (timed together) but they have no common primary clock. The design could fail in hardware. To find a timing path between these clocks, run the following command: report_timing -from [get_clocks clk_100n_design_1_clk_wiz_0_0] -to [get_clocks clk_100n_design_1_clk_wiz_0_0_1]
Related violations: <none>

TIMING-6#9 Critical Warning
No common primary clock between related clocks  
The clocks clk_100n_design_1_clk_wiz_0_0_1 and clk_100n_design_1_clk_wiz_0_0 are related (timed together) but they have no common primary clock. The design could fail in hardware. To find a timing path between these clocks, run the following command: report_timing -from [get_clocks clk_100n_design_1_clk_wiz_0_0_1] -to [get_clocks clk_100n_design_1_clk_wiz_0_0]
Related violations: <none>

TIMING-7#1 Critical Warning
No common node between related clocks  
The clocks DAC_InIO_Clk and ZmodDAC_ClkIO are related (timed together) but they have no common node. The design could fail in hardware. To find a timing path between these clocks, run the following command: report_timing -from [get_clocks DAC_InIO_Clk] -to [get_clocks ZmodDAC_ClkIO]
Related violations: <none>

TIMING-7#2 Critical Warning
No common node between related clocks  
The clocks clk_100_design_1_clk_wiz_0_0 and DAC_InIO_Clk are related (timed together) but they have no common node. The design could fail in hardware. To find a timing path between these clocks, run the following command: report_timing -from [get_clocks clk_100_design_1_clk_wiz_0_0] -to [get_clocks DAC_InIO_Clk]
Related violations: <none>

TIMING-7#3 Critical Warning
No common node between related clocks  
The clocks clk_100_design_1_clk_wiz_0_0 and ZmodDAC_ClkIO are related (timed together) but they have no common node. The design could fail in hardware. To find a timing path between these clocks, run the following command: report_timing -from [get_clocks clk_100_design_1_clk_wiz_0_0] -to [get_clocks ZmodDAC_ClkIO]
Related violations: <none>

TIMING-7#4 Critical Warning
No common node between related clocks  
The clocks clk_100_design_1_clk_wiz_0_0_1 and DAC_InIO_Clk are related (timed together) but they have no common node. The design could fail in hardware. To find a timing path between these clocks, run the following command: report_timing -from [get_clocks clk_100_design_1_clk_wiz_0_0_1] -to [get_clocks DAC_InIO_Clk]
Related violations: <none>

TIMING-7#5 Critical Warning
No common node between related clocks  
The clocks clk_100_design_1_clk_wiz_0_0_1 and ZmodDAC_ClkIO are related (timed together) but they have no common node. The design could fail in hardware. To find a timing path between these clocks, run the following command: report_timing -from [get_clocks clk_100_design_1_clk_wiz_0_0_1] -to [get_clocks ZmodDAC_ClkIO]
Related violations: <none>

TIMING-27#1 Critical Warning
Invalid primary clock on hierarchical pin  
A primary clock DAC_Clk is created on an inappropriate internal pin design_1_i/ZmodAWGController_1/U0/DAC_Clk. It is not recommended to create a primary clock on a hierarchical pin when its driver pin has a fanout connected to multiple clock pins
Related violations: <none>

TIMING-27#2 Critical Warning
Invalid primary clock on hierarchical pin  
A primary clock DAC_InIO_Clk is created on an inappropriate internal pin design_1_i/ZmodAWGController_1/U0/DAC_InIO_Clk. It is not recommended to create a primary clock on a hierarchical pin when its driver pin has a fanout connected to multiple clock pins
Related violations: <none>

DPIR-1#1 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[10] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#2 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[11] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#3 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[12] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#4 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[13] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#5 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[14] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#6 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[15] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#7 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[16] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#8 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[17] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#9 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[18] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#10 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[19] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#11 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[20] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#12 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[21] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#13 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[22] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#14 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[23] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#15 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[24] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#16 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[25] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#17 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[26] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#18 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[27] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#19 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[28] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#20 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[29] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#21 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[4] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#22 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[5] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#23 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[6] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#24 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[7] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#25 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[8] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#26 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh1DAC_Calibration/cCalibMult0/A[9] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#27 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[10] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#28 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[11] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#29 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[12] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#30 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[13] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#31 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[14] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#32 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[15] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#33 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[16] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#34 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[17] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#35 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[18] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#36 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[19] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#37 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[20] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#38 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[21] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#39 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[22] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#40 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[23] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#41 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[24] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#42 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[25] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#43 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[26] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#44 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[27] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#45 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[28] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#46 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[29] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#47 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[4] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#48 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[5] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#49 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[6] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#50 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[7] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#51 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[8] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#52 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_0/U0/InstCh2DAC_Calibration/cCalibMult0/A[9] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#53 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[10] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#54 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[11] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#55 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[12] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#56 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[13] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#57 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[14] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#58 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[15] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#59 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[16] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#60 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[17] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#61 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[18] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#62 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[19] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#63 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[20] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#64 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[21] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#65 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[22] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#66 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[23] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#67 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[24] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#68 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[25] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#69 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[26] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#70 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[27] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#71 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[28] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#72 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[29] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#73 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[4] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#74 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[5] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#75 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[6] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#76 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[7] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#77 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[8] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#78 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh1DAC_Calibration/cCalibMult0/A[9] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#79 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[10] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#80 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[11] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#81 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[12] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#82 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[13] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#83 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[14] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#84 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[15] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#85 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[16] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#86 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[17] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#87 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[18] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#88 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[19] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#89 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[20] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#90 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[21] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#91 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[22] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#92 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[23] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#93 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[24] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#94 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[25] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#95 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[26] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#96 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[27] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#97 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[28] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#98 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[29] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#99 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[4] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#100 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[5] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#101 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[6] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#102 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[7] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#103 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[8] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPIR-1#104 Warning
Asynchronous driver check  
DSP design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0 input pin design_1_i/ZmodAWGController_1/U0/InstCh2DAC_Calibration/cCalibMult0/A[9] is connected to registers with an asynchronous reset. This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

TIMING-9#1 Warning
Unknown CDC Logic  
One or more asynchronous Clock Domain Crossing has been detected between 2 clock domains through a set_false_path or a set_clock_groups or set_max_delay -datapath_only constraint but no double-registers logic synchronizer has been found on the side of the capture clock. It is recommended to run report_cdc for a complete and detailed CDC coverage. Please consider using XPM_CDC to avoid Critical severities
Related violations: <none>

TIMING-15#1 Warning
Large hold violation on inter-clock path  
There is a large inter-clock skew of 5.854 ns between design_1_i/ZmodAWGController_0/U0/ForDAC_Data[10].InstDataODDR/C (clocked by clk_100_design_1_clk_wiz_0_0) and dZmodDAC_Data_0[10] (clocked by ZmodDAC_ClkIO) that results in large hold timing violation(s) of -4.270 ns. Fixing large hold violations during routing might impact setup slack and result in more difficult timing closure
Related violations: <none>

TIMING-15#2 Warning
Large hold violation on inter-clock path  
There is a large inter-clock skew of 5.854 ns between design_1_i/ZmodAWGController_0/U0/ForDAC_Data[11].InstDataODDR/C (clocked by clk_100_design_1_clk_wiz_0_0) and dZmodDAC_Data_0[11] (clocked by ZmodDAC_ClkIO) that results in large hold timing violation(s) of -4.261 ns. Fixing large hold violations during routing might impact setup slack and result in more difficult timing closure
Related violations: <none>

TIMING-15#3 Warning
Large hold violation on inter-clock path  
There is a large inter-clock skew of 5.857 ns between design_1_i/ZmodAWGController_0/U0/ForDAC_Data[12].InstDataODDR/C (clocked by clk_100_design_1_clk_wiz_0_0) and dZmodDAC_Data_0[12] (clocked by ZmodDAC_ClkIO) that results in large hold timing violation(s) of -4.260 ns. Fixing large hold violations during routing might impact setup slack and result in more difficult timing closure
Related violations: <none>

TIMING-15#4 Warning
Large hold violation on inter-clock path  
There is a large inter-clock skew of 5.857 ns between design_1_i/ZmodAWGController_0/U0/ForDAC_Data[13].InstDataODDR/C (clocked by clk_100_design_1_clk_wiz_0_0) and dZmodDAC_Data_0[13] (clocked by ZmodDAC_ClkIO) that results in large hold timing violation(s) of -4.256 ns. Fixing large hold violations during routing might impact setup slack and result in more difficult timing closure
Related violations: <none>

TIMING-15#5 Warning
Large hold violation on inter-clock path  
There is a large inter-clock skew of 5.857 ns between design_1_i/ZmodAWGController_0/U0/ForDAC_Data[8].InstDataODDR/C (clocked by clk_100_design_1_clk_wiz_0_0) and dZmodDAC_Data_0[8] (clocked by ZmodDAC_ClkIO) that results in large hold timing violation(s) of -4.282 ns. Fixing large hold violations during routing might impact setup slack and result in more difficult timing closure
Related violations: <none>

TIMING-15#6 Warning
Large hold violation on inter-clock path  
There is a large inter-clock skew of 5.857 ns between design_1_i/ZmodAWGController_0/U0/ForDAC_Data[9].InstDataODDR/C (clocked by clk_100_design_1_clk_wiz_0_0) and dZmodDAC_Data_0[9] (clocked by ZmodDAC_ClkIO) that results in large hold timing violation(s) of -4.267 ns. Fixing large hold violations during routing might impact setup slack and result in more difficult timing closure
Related violations: <none>

TIMING-15#7 Warning
Large hold violation on inter-clock path  
There is a large inter-clock skew of 5.860 ns between design_1_i/ZmodAWGController_0/U0/ForDAC_Data[2].InstDataODDR/C (clocked by clk_100_design_1_clk_wiz_0_0) and dZmodDAC_Data_0[2] (clocked by ZmodDAC_ClkIO) that results in large hold timing violation(s) of -4.247 ns. Fixing large hold violations during routing might impact setup slack and result in more difficult timing closure
Related violations: <none>

TIMING-15#8 Warning
Large hold violation on inter-clock path  
There is a large inter-clock skew of 5.862 ns between design_1_i/ZmodAWGController_0/U0/ForDAC_Data[6].InstDataODDR/C (clocked by clk_100_design_1_clk_wiz_0_0) and dZmodDAC_Data_0[6] (clocked by ZmodDAC_ClkIO) that results in large hold timing violation(s) of -4.273 ns. Fixing large hold violations during routing might impact setup slack and result in more difficult timing closure
Related violations: <none>

TIMING-15#9 Warning
Large hold violation on inter-clock path  
There is a large inter-clock skew of 5.862 ns between design_1_i/ZmodAWGController_0/U0/ForDAC_Data[7].InstDataODDR/C (clocked by clk_100_design_1_clk_wiz_0_0) and dZmodDAC_Data_0[7] (clocked by ZmodDAC_ClkIO) that results in large hold timing violation(s) of -4.274 ns. Fixing large hold violations during routing might impact setup slack and result in more difficult timing closure
Related violations: <none>

TIMING-15#10 Warning
Large hold violation on inter-clock path  
There is a large inter-clock skew of 5.865 ns between design_1_i/ZmodAWGController_0/U0/ForDAC_Data[3].InstDataODDR/C (clocked by clk_100_design_1_clk_wiz_0_0) and dZmodDAC_Data_0[3] (clocked by ZmodDAC_ClkIO) that results in large hold timing violation(s) of -4.261 ns. Fixing large hold violations during routing might impact setup slack and result in more difficult timing closure
Related violations: <none>

TIMING-15#11 Warning
Large hold violation on inter-clock path  
There is a large inter-clock skew of 5.866 ns between design_1_i/ZmodAWGController_0/U0/ForDAC_Data[0].InstDataODDR/C (clocked by clk_100_design_1_clk_wiz_0_0) and dZmodDAC_Data_0[0] (clocked by ZmodDAC_ClkIO) that results in large hold timing violation(s) of -4.256 ns. Fixing large hold violations during routing might impact setup slack and result in more difficult timing closure
Related violations: <none>

TIMING-15#12 Warning
Large hold violation on inter-clock path  
There is a large inter-clock skew of 5.866 ns between design_1_i/ZmodAWGController_0/U0/ForDAC_Data[5].InstDataODDR/C (clocked by clk_100_design_1_clk_wiz_0_0) and dZmodDAC_Data_0[5] (clocked by ZmodDAC_ClkIO) that results in large hold timing violation(s) of -4.268 ns. Fixing large hold violations during routing might impact setup slack and result in more difficult timing closure
Related violations: <none>

TIMING-15#13 Warning
Large hold violation on inter-clock path  
There is a large inter-clock skew of 5.868 ns between design_1_i/ZmodAWGController_0/U0/ForDAC_Data[1].InstDataODDR/C (clocked by clk_100_design_1_clk_wiz_0_0) and dZmodDAC_Data_0[1] (clocked by ZmodDAC_ClkIO) that results in large hold timing violation(s) of -4.273 ns. Fixing large hold violations during routing might impact setup slack and result in more difficult timing closure
Related violations: <none>

TIMING-15#14 Warning
Large hold violation on inter-clock path  
There is a large inter-clock skew of 5.868 ns between design_1_i/ZmodAWGController_0/U0/ForDAC_Data[4].InstDataODDR/C (clocked by clk_100_design_1_clk_wiz_0_0) and dZmodDAC_Data_0[4] (clocked by ZmodDAC_ClkIO) that results in large hold timing violation(s) of -4.276 ns. Fixing large hold violations during routing might impact setup slack and result in more difficult timing closure
Related violations: <none>

TIMING-18#1 Warning
Missing input or output delay  
An input delay is missing on resetn_0 relative to clock(s) DAC_Clk, DAC_InIO_Clk
Related violations: <none>

TIMING-18#2 Warning
Missing input or output delay  
An output delay is missing on dZmodDAC_Data_1[0] relative to clock(s) DAC_InIO_Clk
Related violations: <none>

TIMING-18#3 Warning
Missing input or output delay  
An output delay is missing on dZmodDAC_Data_1[10] relative to clock(s) DAC_InIO_Clk
Related violations: <none>

TIMING-18#4 Warning
Missing input or output delay  
An output delay is missing on dZmodDAC_Data_1[11] relative to clock(s) DAC_InIO_Clk
Related violations: <none>

TIMING-18#5 Warning
Missing input or output delay  
An output delay is missing on dZmodDAC_Data_1[12] relative to clock(s) DAC_InIO_Clk
Related violations: <none>

TIMING-18#6 Warning
Missing input or output delay  
An output delay is missing on dZmodDAC_Data_1[13] relative to clock(s) DAC_InIO_Clk
Related violations: <none>

TIMING-18#7 Warning
Missing input or output delay  
An output delay is missing on dZmodDAC_Data_1[1] relative to clock(s) DAC_InIO_Clk
Related violations: <none>

TIMING-18#8 Warning
Missing input or output delay  
An output delay is missing on dZmodDAC_Data_1[2] relative to clock(s) DAC_InIO_Clk
Related violations: <none>

TIMING-18#9 Warning
Missing input or output delay  
An output delay is missing on dZmodDAC_Data_1[3] relative to clock(s) DAC_InIO_Clk
Related violations: <none>

TIMING-18#10 Warning
Missing input or output delay  
An output delay is missing on dZmodDAC_Data_1[4] relative to clock(s) DAC_InIO_Clk
Related violations: <none>

TIMING-18#11 Warning
Missing input or output delay  
An output delay is missing on dZmodDAC_Data_1[5] relative to clock(s) DAC_InIO_Clk
Related violations: <none>

TIMING-18#12 Warning
Missing input or output delay  
An output delay is missing on dZmodDAC_Data_1[6] relative to clock(s) DAC_InIO_Clk
Related violations: <none>

TIMING-18#13 Warning
Missing input or output delay  
An output delay is missing on dZmodDAC_Data_1[7] relative to clock(s) DAC_InIO_Clk
Related violations: <none>

TIMING-18#14 Warning
Missing input or output delay  
An output delay is missing on dZmodDAC_Data_1[8] relative to clock(s) DAC_InIO_Clk
Related violations: <none>

TIMING-18#15 Warning
Missing input or output delay  
An output delay is missing on dZmodDAC_Data_1[9] relative to clock(s) DAC_InIO_Clk
Related violations: <none>

TIMING-56#1 Warning
Missing logically or physically excluded clock groups constraint  
Multiple clocks are user generated or auto-derived on the source pin design_1_i/clk_wiz_0/inst/mmcm_adv_inst/CLKFBOUT but are not logically or physically exclusive with respect to one another. To have the static timing analysis match the behavior in hardware, there cannot be multiple clocks generated on the same pin and when such situation occurs, the clocks should be defined as physically or logically exclusive. The list of clocks generated on the source pin is: clkfbout_design_1_clk_wiz_0_0, clkfbout_design_1_clk_wiz_0_0_1
Related violations: <none>

TIMING-56#2 Warning
Missing logically or physically excluded clock groups constraint  
Multiple clocks are user generated or auto-derived on the source pin design_1_i/clk_wiz_0/inst/mmcm_adv_inst/CLKOUT0 but are not logically or physically exclusive with respect to one another. To have the static timing analysis match the behavior in hardware, there cannot be multiple clocks generated on the same pin and when such situation occurs, the clocks should be defined as physically or logically exclusive. The list of clocks generated on the source pin is: clk_100_design_1_clk_wiz_0_0, clk_100_design_1_clk_wiz_0_0_1
Related violations: <none>

TIMING-56#3 Warning
Missing logically or physically excluded clock groups constraint  
Multiple clocks are user generated or auto-derived on the source pin design_1_i/clk_wiz_0/inst/mmcm_adv_inst/CLKOUT1 but are not logically or physically exclusive with respect to one another. To have the static timing analysis match the behavior in hardware, there cannot be multiple clocks generated on the same pin and when such situation occurs, the clocks should be defined as physically or logically exclusive. The list of clocks generated on the source pin is: clk_100n_design_1_clk_wiz_0_0, clk_100n_design_1_clk_wiz_0_0_1
Related violations: <none>

XDCB-5#1 Warning
Runtime inefficient way to find pin objects  
The option '-fall_from : [get_pins -hier -filter {NAME =~ *InstDacClkReset*/SyncAsyncx/oSyncStages_reg[1]/C}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '26' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_1/constr/ConstrsZmodDAC1411.xdc (Line: 10)
Related violations: <none>

XDCB-5#2 Warning
Runtime inefficient way to find pin objects  
The option '-fall_from : [get_pins -hier -filter {NAME =~ *InstDacClkReset*/SyncAsyncx/oSyncStages_reg[1]/C}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '8' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_0/constr/ConstrsZmodDAC1411.xdc (Line: 10)
Related violations: <none>

XDCB-5#3 Warning
Runtime inefficient way to find pin objects  
The option '-fall_from : [get_pins -hier -filter {NAME =~ *InstSamplingReset*/SyncAsyncx/oSyncStages_reg[1]/C}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '25' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_1/constr/ConstrsZmodDAC1411.xdc (Line: 9)
Related violations: <none>

XDCB-5#4 Warning
Runtime inefficient way to find pin objects  
The option '-fall_from : [get_pins -hier -filter {NAME =~ *InstSamplingReset*/SyncAsyncx/oSyncStages_reg[1]/C}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '7' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_0/constr/ConstrsZmodDAC1411.xdc (Line: 9)
Related violations: <none>

XDCB-5#5 Warning
Runtime inefficient way to find pin objects  
The option '-fall_to : [get_pins -hier -filter {NAME=~ *InstDAC_ClkIO_ODDR*/R}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '23' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_1/constr/ConstrsZmodDAC1411.xdc (Line: 7)
Related violations: <none>

XDCB-5#6 Warning
Runtime inefficient way to find pin objects  
The option '-fall_to : [get_pins -hier -filter {NAME=~ *InstDAC_ClkIO_ODDR*/R}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '27' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_1/constr/ConstrsZmodDAC1411.xdc (Line: 11)
Related violations: <none>

XDCB-5#7 Warning
Runtime inefficient way to find pin objects  
The option '-fall_to : [get_pins -hier -filter {NAME=~ *InstDAC_ClkIO_ODDR*/R}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '5' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_0/constr/ConstrsZmodDAC1411.xdc (Line: 7)
Related violations: <none>

XDCB-5#8 Warning
Runtime inefficient way to find pin objects  
The option '-fall_to : [get_pins -hier -filter {NAME=~ *InstDAC_ClkIO_ODDR*/R}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '9' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_0/constr/ConstrsZmodDAC1411.xdc (Line: 11)
Related violations: <none>

XDCB-5#9 Warning
Runtime inefficient way to find pin objects  
The option '-fall_to : [get_pins -hier -filter {NAME=~ *InstDAC_ClkinODDR*/R}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '10' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_0/constr/ConstrsZmodDAC1411.xdc (Line: 12)
Related violations: <none>

XDCB-5#10 Warning
Runtime inefficient way to find pin objects  
The option '-fall_to : [get_pins -hier -filter {NAME=~ *InstDAC_ClkinODDR*/R}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '24' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_1/constr/ConstrsZmodDAC1411.xdc (Line: 8)
Related violations: <none>

XDCB-5#11 Warning
Runtime inefficient way to find pin objects  
The option '-fall_to : [get_pins -hier -filter {NAME=~ *InstDAC_ClkinODDR*/R}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '28' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_1/constr/ConstrsZmodDAC1411.xdc (Line: 12)
Related violations: <none>

XDCB-5#12 Warning
Runtime inefficient way to find pin objects  
The option '-fall_to : [get_pins -hier -filter {NAME=~ *InstDAC_ClkinODDR*/R}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '6' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_0/constr/ConstrsZmodDAC1411.xdc (Line: 8)
Related violations: <none>

XDCB-5#13 Warning
Runtime inefficient way to find pin objects  
The option '-rise_from : [get_pins -hier -filter {NAME =~ *InstDacClkReset*/SyncAsyncx/oSyncStages_reg[1]/C}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '10' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_0/constr/ConstrsZmodDAC1411.xdc (Line: 12)
Related violations: <none>

XDCB-5#14 Warning
Runtime inefficient way to find pin objects  
The option '-rise_from : [get_pins -hier -filter {NAME =~ *InstDacClkReset*/SyncAsyncx/oSyncStages_reg[1]/C}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '24' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_1/constr/ConstrsZmodDAC1411.xdc (Line: 8)
Related violations: <none>

XDCB-5#15 Warning
Runtime inefficient way to find pin objects  
The option '-rise_from : [get_pins -hier -filter {NAME =~ *InstDacClkReset*/SyncAsyncx/oSyncStages_reg[1]/C}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '28' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_1/constr/ConstrsZmodDAC1411.xdc (Line: 12)
Related violations: <none>

XDCB-5#16 Warning
Runtime inefficient way to find pin objects  
The option '-rise_from : [get_pins -hier -filter {NAME =~ *InstDacClkReset*/SyncAsyncx/oSyncStages_reg[1]/C}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '6' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_0/constr/ConstrsZmodDAC1411.xdc (Line: 8)
Related violations: <none>

XDCB-5#17 Warning
Runtime inefficient way to find pin objects  
The option '-rise_from : [get_pins -hier -filter {NAME =~ *InstSamplingReset*/SyncAsyncx/oSyncStages_reg[1]/C}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '23' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_1/constr/ConstrsZmodDAC1411.xdc (Line: 7)
Related violations: <none>

XDCB-5#18 Warning
Runtime inefficient way to find pin objects  
The option '-rise_from : [get_pins -hier -filter {NAME =~ *InstSamplingReset*/SyncAsyncx/oSyncStages_reg[1]/C}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '27' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_1/constr/ConstrsZmodDAC1411.xdc (Line: 11)
Related violations: <none>

XDCB-5#19 Warning
Runtime inefficient way to find pin objects  
The option '-rise_from : [get_pins -hier -filter {NAME =~ *InstSamplingReset*/SyncAsyncx/oSyncStages_reg[1]/C}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '5' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_0/constr/ConstrsZmodDAC1411.xdc (Line: 7)
Related violations: <none>

XDCB-5#20 Warning
Runtime inefficient way to find pin objects  
The option '-rise_from : [get_pins -hier -filter {NAME =~ *InstSamplingReset*/SyncAsyncx/oSyncStages_reg[1]/C}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '9' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_0/constr/ConstrsZmodDAC1411.xdc (Line: 11)
Related violations: <none>

XDCB-5#21 Warning
Runtime inefficient way to find pin objects  
The option '-through : [get_pins -filter {NAME =~ *SyncAsync*/oSyncStages_reg[*]/D} -hier]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '21' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_1/constr/ConstrsZmodDAC1411.xdc (Line: 3)
Related violations: <none>

XDCB-5#22 Warning
Runtime inefficient way to find pin objects  
The option '-through : [get_pins -filter {NAME =~ *SyncAsync*/oSyncStages_reg[*]/D} -hier]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '3' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_0/constr/ConstrsZmodDAC1411.xdc (Line: 3)
Related violations: <none>

XDCB-5#23 Warning
Runtime inefficient way to find pin objects  
The option '-to : [get_pins -hier -filter {NAME=~ *InstDAC_ClkIO_ODDR*/R}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '25' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_1/constr/ConstrsZmodDAC1411.xdc (Line: 9)
Related violations: <none>

XDCB-5#24 Warning
Runtime inefficient way to find pin objects  
The option '-to : [get_pins -hier -filter {NAME=~ *InstDAC_ClkIO_ODDR*/R}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '7' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_0/constr/ConstrsZmodDAC1411.xdc (Line: 9)
Related violations: <none>

XDCB-5#25 Warning
Runtime inefficient way to find pin objects  
The option '-to : [get_pins -hier -filter {NAME=~ *InstDAC_ClkinODDR*/R}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '26' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_1/constr/ConstrsZmodDAC1411.xdc (Line: 10)
Related violations: <none>

XDCB-5#26 Warning
Runtime inefficient way to find pin objects  
The option '-to : [get_pins -hier -filter {NAME=~ *InstDAC_ClkinODDR*/R}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '8' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_0/constr/ConstrsZmodDAC1411.xdc (Line: 10)
Related violations: <none>

XDCC-1#1 Warning
Scoped Clock constraint overwritten with the same name  
A new clock constraint create_clock overrides a previous scoped clock constraint with the same name. It is not recommended to override a scoped (typically an IP) clock constraint and could result in unexpected behaviors.
New: create_clock -period 10.000 -name DAC_Clk -waveform {0.000 5.000} -add [get_ports -scoped_to_current_instance DAC_Clk] (Source: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_1/constr/ConstrZmodDAC1411_ooc.xdc (Line: 3))
Previous: create_clock -period 10.000 -name DAC_Clk -waveform {0.000 5.000} -add [get_ports -scoped_to_current_instance DAC_Clk] (Source: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_0/constr/ConstrZmodDAC1411_ooc.xdc (Line: 3))
Related violations: <none>

XDCC-1#2 Warning
Scoped Clock constraint overwritten with the same name  
A new clock constraint create_clock overrides a previous scoped clock constraint with the same name. It is not recommended to override a scoped (typically an IP) clock constraint and could result in unexpected behaviors.
New: create_clock -period 10.000 -name DAC_InIO_Clk -waveform {2.500 7.500} -add [get_ports -scoped_to_current_instance DAC_InIO_Clk] (Source: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_1/constr/ConstrZmodDAC1411_ooc.xdc (Line: 6))
Previous: create_clock -period 10.000 -name DAC_InIO_Clk -waveform {2.500 7.500} -add [get_ports -scoped_to_current_instance DAC_InIO_Clk] (Source: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_0/constr/ConstrZmodDAC1411_ooc.xdc (Line: 6))
Related violations: <none>

XDCC-1#3 Warning
Scoped Clock constraint overwritten with the same name  
A new clock constraint create_generated_clock overrides a previous scoped clock constraint with the same name. It is not recommended to override a scoped (typically an IP) clock constraint and could result in unexpected behaviors.
New: create_generated_clock -name ZmodDAC_ClkIO -source [get_pins InstDAC_ClkIO_ODDR/C] -divide_by 1 -add -master_clock [get_clocks -of [get_ports -scoped_to_current_instance DAC_Clk]] [get_ports ZmodDAC_ClkIO_1] (Source: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_1/constr/ConstrsZmodDAC1411.xdc (Line: 14))
Previous: create_generated_clock -name ZmodDAC_ClkIO -source [get_pins InstDAC_ClkIO_ODDR/C] -divide_by 1 -add -master_clock [get_clocks -of [get_ports -scoped_to_current_instance DAC_Clk]] [get_ports ZmodDAC_ClkIO_0] (Source: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_0/constr/ConstrsZmodDAC1411.xdc (Line: 14))
Related violations: <none>

XDCC-1#4 Warning
Scoped Clock constraint overwritten with the same name  
A new clock constraint create_generated_clock overrides a previous scoped clock constraint with the same name. It is not recommended to override a scoped (typically an IP) clock constraint and could result in unexpected behaviors.
New: create_generated_clock -name ZmodDAC_ClkIn -source [get_pins InstDAC_ClkinODDR/C] -divide_by 1 -add -master_clock [get_clocks -of [get_ports -scoped_to_current_instance DAC_Clk]] [get_ports ZmodDAC_ClkIn_1] (Source: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_1/constr/ConstrsZmodDAC1411.xdc (Line: 15))
Previous: create_generated_clock -name ZmodDAC_ClkIn -source [get_pins InstDAC_ClkinODDR/C] -divide_by 1 -add -master_clock [get_clocks -of [get_ports -scoped_to_current_instance DAC_Clk]] [get_ports ZmodDAC_ClkIn_0] (Source: c:/GitHub_projects/Eclypse_Z7_Zmod_AWG/Eclypse_Z7_Zmod_AWG.gen/sources_1/bd/design_1/ip/design_1_ZmodAWGController_0_0/constr/ConstrsZmodDAC1411.xdc (Line: 15))
Related violations: <none>


